#Task 39: Sudoku Validator
def is_valid_sudoku(board):
    def is_valid_group(group):
        nums = [num for num in group if num != 0]  # Ignore empty cells (0)
        return len(nums) == len(set(nums))  # Check for duplicates

    # Check rows and columns
    for i in range(9):
        if not is_valid_group(board[i]) or not is_valid_group([board[j][i] for j in range(9)]):
            return False

    # Check 3x3 subgrids
    for r in range(0, 9, 3):
        for c in range(0, 9, 3):
            subgrid = [board[i][j] for i in range(r, r + 3) for j in range(c, c + 3)]
            if not is_valid_group(subgrid):
                return False

    return True

# Example Sudoku board input (0 represents empty cells)
sudoku_board = [
    [5, 3, 0, 0, 7, 0, 0, 0, 0],
    [6, 0, 0, 1, 9, 5, 0, 0, 0],
    [0, 9, 8, 0, 0, 0, 0, 6, 0],
    [8, 0, 0, 0, 6, 0, 0, 0, 3],
    [4, 0, 0, 8, 0, 3, 0, 0, 1],
    [7, 0, 0, 0, 2, 0, 0, 0, 6],
    [0, 6, 0, 0, 0, 0, 2, 8, 0],
    [0, 0, 0, 4, 1, 9, 0, 0, 5],
    [0, 0, 0, 0, 8, 0, 0, 7, 9]
]

# Check if the Sudoku board is valid
print(is_valid_sudoku(sudoku_board))

True
